import numpy as np
from math import *


"""
1.Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга
(ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Используя математические операции, посчитать коэффициенты линейной регрессии, приняв за X заработную плату
(то есть, zp - признак), а за y - значения скорингового балла (то есть, ks - целевая переменная).
Произвести расчет как с использованием intercept, так и без.

2.Посчитать коэффициент линейной регрессии при заработной плате (zp), используя градиентный спуск (без intercept).
"""

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

B1 = (np.mean(zp * ks) - np.mean(zp) * np.mean(ks)) / (np.mean(zp ** 2) - np.mean(zp) ** 2)
B0 = np.mean(ks) - B1 * np.mean(zp)

intercept = np.array(B0 + B1 * zp)
mse = ((ks - intercept) ** 2).mean()

# Without intercept
M1 = ks.reshape(-1, 1)
M2 = zp.reshape(-1, 1)

B_ = np.dot(np.linalg.inv(np.dot(M2.T, M2)), M2.T@M1)
without_intercept = np.array(B_ * zp)
mse1 = ((ks - without_intercept) ** 2) .mean()
print(f"{'.'*20} Task 1, TASK 2 {'.'*20}\n"
      f"With intercept: {mse}\n"
      f"Without intercept: {mse1}\n")

"""
*3. Произвести вычисления как в пункте 2, но с вычислением intercept. 
Учесть, что изменение коэффициентов должно производиться
на каждом шаге одновременно 
(то есть изменение одного коэффициента не должно влиять на изменение другого во время одной итерации).
"""


def _mse(B, M1=ks, M2=zp, n=10):
    return np.sum((B * M2 - M1) ** 2) / n


alpha = 1e-6
B = 0.1
print(f"{'.'*20} Task 3 {'.'*20}")
for i in range(1000):
    res = (1 / 10) * np.sum(2 * (B * zp - ks) * zp)
    B -= alpha * res
    if i % 100 == 0:
        print(f"Iter: {i}, B: {B}, mse: {_mse(B)}")

"""
Results 

.................... Task 1, TASK 2 ....................
With intercept: 6470.414201176658
Without intercept: 56516.8584157194

.................... Task 3 ....................
Iter: 0, B: 0.25952808000000005, mse: 493237.7212546963
Iter: 100, B: 5.54537842245223, mse: 58151.31823171113
Iter: 200, B: 5.868748638669329, mse: 56522.97550129376
Iter: 300, B: 5.888531320728348, mse: 56516.88130936019
Iter: 400, B: 5.8897415574471985, mse: 56516.85850140053
Iter: 500, B: 5.889815595583751, mse: 56516.858416040064
Iter: 600, B: 5.889820124983314, mse: 56516.85841572062
Iter: 700, B: 5.889820402076462, mse: 56516.85841571941
Iter: 800, B: 5.88982041902807, mse: 56516.8584157194
Iter: 900, B: 5.889820420065112, mse: 56516.85841571941

Process finished with exit code 0

"""
